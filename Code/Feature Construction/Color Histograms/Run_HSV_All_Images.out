/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
/accounts/grad/ijyliu/repo/computer-vision-project/Code/Feature Construction/Color Histograms/Run_HSV_All_Images.py:123: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  variant_df[feature_name + '_' + str(i)] = [vector[i] for vector in feature_vectors]
number of CPUs: 48
first train image path
../../../Images/train/No Blur/Sedan_train_orig_test_01516_resized_no_blur.jpg
first test image path
../../../Images/test/No Blur/Pickup_test_orig_test_05620_resized_no_blur.jpg
value counts of test_80_20
test_80_20
0    6596
1    1656
Name: count, dtype: int64
first and second feature vector
[ 279   76  110   63   40   59   52  127  134    7   16  135    9   74
    2  217   44    5  289   91   55  301  179  450 1506  246  207    0
  244  336   17 2389  458    2   20   51   85   49    0    0    1    0
   48    0    0   63    1    2    1    9    3   10    1    0    3    0
    4    0    1    6    8    0    0    1    2    0    0    0    3    0
    0   11    0    7    0    2    2    0   14    1    2    0    0    0
    0    9    0    0    2    3    0    0    1   17    1    1    3    0
    2    5    0    0    0    2    9    3   24    0    1    1    1    3
    8   29    2    2    9   33    4   11   11    7    7   36    3   18
    9    3   95   17   31   29   33   35   29  121  110   45  110  179
  519  481  528  654  732 1131 7038  877  887  948  753 1158  695  815
  925  553  492 1006  308  403  292  128  353 2972  664   84   90   63
   93   57 1922   13   37  123   77   39  385  462  279  226  101   62
  190   56  184   44   49  233  277   44   51   27  101  125   26   18
  165   37   60  152   55  180   56   53   73   76  105   76   58   75
   47   51   37  150   53   49   70  101   83   71  156  211  156  199
  313  216  319  348  214  270  317  323  372  353  295  269  259  312
  205  279  363  508  392  384  631  751 1036 1191 2233 3367 2926 1951
  970  569  239  112   38    3   39   42   42   61   32   95  108   83
   79  125  197  120  259  206 1757 1390  769  433  795 1338  313  284
  486  280  231  189  193  173  242  274  391  361  499  374  340  576
  652  499  498  248  210  193  206  262  250  224  268  313  165  318
  284  201  198  278  285  171  234  227  242  207  245  142  260  281
  206  232  239  296  253  287  282  368  289  433  645  812  793  448
 1502  259  849  588 3175  369  194  209  131  128  142  127  127  134
  118  129  172  146  167  134  149  142  177  162  150  168  147  184
  174  165  195  173  168  182  198  189  201  247  259  228  292  248
  244  255  302  254  222  105  315  212  240  204  248  218  201  178
  229  189  181  200  162  201  194  221  231  177  168  264  223  250
  278  244  232  240  250  245  240  204  211  170  234  219  229  180
  188  187  176  166  144  170  145  136  128  175  186  162  143  121
   90  160  117  142  157  127   93   96  155  115  135  123  127  109
  137  111  141  132  143  162  134  110  159  161  195  192  196  217
  221  246  271  311  340  377  363  448  380  416  546  455  541  502
  457  459  437  379  403  353  337  329  336  290  259  186  195  155
  139  144   97   70   58   36   31   20   13   10   11    9    6    5
    6    5    1    2    3    1    0   91    0    0    0    0    0    0
    1    1    0    4    1    4    1    5    4    7    5    7   16    7
   16   15   17   21   20   31   41   39   54   76   90  119  157  229
  203  206  261  410  554  621  727  635  453  502  428  356  429  353
  292  366  268  297  269  214  231  237  241  186  220  197  199  202
  215  223  207  206  178  185  174  157  155  130  139  145  131  115
  135  150  108  110  110  143  118  103  143  145  168  179  161  205
  219  168  182  167  165  183  173  171  174  181  188  178  174  206
  178  221  178  230  201  199  215  224  181  200  224  224  262  185
  184  190  203  212  210  205  177  196  147  209  187  167  177  173
  134  160  156  141  130  148  155  143  142  111  102  138  141  151
  162  171  127  209  215  171  147  204  149  192  177  158  158  130
  156  186  165  138  148  139  139  138  136  138  141  131  158  160
  140  129  170  189  148  188  207  223  203  239  277  326  303  261
  328  311  324  248  318  343  345  391  351  345  372  314  275  230
  222  235  299  246  238  248  279  272  269  254  326  308  293  283
  357  322  319  362  356  376  416  446  523  675  756 1064 1101 1284
 1228 1090  765  614  395  353  343  295  278  293  194  215  208  146
  137  106   92   79  110  118  105  182  332 2044 1522 5299]
[ 683   50   44   51   29   27   34  380  702    3    9  199   10   54
   10  924  342   68 1271  173  560 2342  281  897 2310  411 1310  226
  912 1722  291 1326  736  208 1308  831 1784  136   62  134  107   46
  673   30   48  207   69  103   98  210  139  286   49   35  118    5
   87    7    9   77   83   18   15    9   20   15    8    0   76    1
   14  125   11   85    1    1   11    1   54   11   39   16    2    0
    0   72    0    1    5   13    0    0   10   87    1    6   25    0
   18   75    0    0    7    1   82   17  234    8   19   11    0    0
   54  208   10    8    6  139    8   19   41    0    9  135    6   19
    1    0  263    8   35   79   17   12   44  226  203    6   79  293
   72  337    3  592  567  348  782  694  444  381  193  288  166   77
  213   65  662  255  103  203  107   63  736  155  531  201  278  139
  712   28 1289    0    5  605  261   20  524  558  461  311  125   86
  807    7  275   28   71  313  203   46   72   43  206  118   16    5
  489    2  150  174   40  469   38   41   88  120  365  133  661  155
  121  157    3  762   73  103  167  474  327   13  406  980  312  242
  510  190  254  410   73  276  159  198 1445  469  580  261  347  414
  678  230  349 1819  107  181 1082  440  278  992  706  504  289  481
  151  192   62    5  361   54  372  501  623  638  734  745  773  820
  911  786 1412 1197 1465 1394 1105 1050 1145 1835 2164 1471 1051  808
  678  756  746  551  585  613  674  449  921  631  491  428  407  393
  360  405  419  379  534  492  384  348  400  367  386  417  295  434
  367  322  396  344  376  326  336  377  335  345  392  223  422  353
  339  406  371  342  390  419  406  495  495  407  506  464  391  444
  511  489  458  315  218  647  304  257  453  332  348  285  299  318
  298  176  338  270  290  251  330  170  288  217  341  206  219  177
  264  230  265  206  325  199  190  246  216  255  271  208  265  245
  326  159  254  194  125    1  462   61  143   55  166   94  170   51
  103   91   96   77   96  108   85   47   84   48  122   89   85   29
   76   72   60   60   26  102   97   51   74   16   77   78   68   30
   16   68   45   61   37    8   72    0   23   38   22   20   39    5
   26   14   27   15   29    5   30    5   10   19    8   20    7    8
   18   15    1   11    7    4   13    3    4   11   15    3   11    0
    4    6    7    0    2    4    2    8    3    3    3    2    1    1
    3    1    6    0    1    2    1    1    2    1    0    1    6    4
    3    1    0    0    0    1    3    3    0    3    0    0    1    0
    0    1    0    0    0    0    0    7    0    0    0    0    0    0
    0    1    1    1    2    3    4    7   18   45   68  116  173  220
  260  252  265  370  368  429  420  451  410  386  398  392  366  400
  343  295  271  281  272  275  285  260  224  208  202  196  184  173
  181  160  205  194  227  263  286  344  329  437  447  380  505  505
  500  534  637  599  607  561  575  495  481  494  465  440  434  446
  392  403  423  459  441  386  372  409  450  389  426  386  435  385
  357  340  391  399  395  419  369  404  417  460  474  605  457  448
  393  385  345  274  262  291  282  273  249  286  220  280  233  225
  220  198  178  135  174  153  158  167  173  159  139  139  188  184
  206  199  194  238  251  248  266  273  183  155  147  126  131  125
  102  117  121   85  126  106  108  116  118  112  123  109  116  129
  124  102  140  144  141  152  128  128  142  153  137  159  160  160
  137  139  135  136  135  168  157  161  162  197  187  175  201  203
  171  182  217  190  197  182  181  129  149  139  146  159  155  129
  133  164  139  148  146  139  151  183  202  171  157  175  159  200
  219  235  251  251  321  305  336  394  377  453  472  548  545  489
  381  330  329  301  337  344  339  311  337  330  332  301  323  325
  283  267  275  240  239  196  174  182  186  133  180 1099]
length of first feature vector
768
                                          Image Path  ...  HSV_767
0  ../../../Images/train/No Blur/Sedan_train_orig...  ...     5299
1  ../../../Images/train/No Blur/SUV_train_orig_t...  ...     1099
2  ../../../Images/train/No Blur/Convertible_trai...  ...        6
3  ../../../Images/train/No Blur/Pickup_train_ori...  ...       94
4  ../../../Images/train/No Blur/SUV_train_orig_t...  ...      840

[5 rows x 770 columns]
length check passed
True
Time taken (in minutes): 0.3536314348379771
Time per image (in minutes): 4.285402748884841e-05
Time elapsed: 0 minute(s).
